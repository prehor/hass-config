---
id: solax_battery_turn_on_forced_charging
alias: Solax Battery Turn on Forced Charging
triggers:
  - trigger: state  # In the late afternoon
    entity_id: sensor.system_time_of_day_detailed
    to: late_afternoon
conditions:
  - condition: template
    value_template: >-  # More than min_interval days have passed since the last full battery charge
      {% set last_fully_charged = states('automation.solax_battery_fully_charged.attributes.last_triggered', now()) %}
      {% set min_interval = states('input_number.solax_battery_forced_charging_min_interval_in_days', 10) | int %}
      {{ as_timestamp(now()) - as_timestamp(last_fully_charged) | int > timedelta(days=min_interval).total_seconds() }}
  - condition: state    # Battery is not forced to charge
    entity_id: select.solax_remotecontrol_power_control
    state: Disabled
actions:
  - action: select.select_option
    target:
      entity_id:
        - select.solax_remotecontrol_power_control
    data:
      option: Enabled Battery Control
  - action: number.set_value
    target:
      entity_id: number.solax_remotecontrol_active_power
    data:
      value: >-   # Calculate the maximum power of inverter battery
        {% set current = states('number.solax_battery_charge_max_current', 30) | float %}
        {% set voltage = states('sensor.solax_battery_voltage_charge', 125) | float %}
        {{ current * voltage }}
  - action: number.set_value
    target:
      entity_id: number.solax_remotecontrol_autorepeat_duration
    data:
      value: >-   # Set the time limit for forced charging
        {% set max_duration = states('input_number.solax_battery_forced_charging_max_duration_in_hours', 4) | int %}
        {{ timedelta(hours=max_duration).total_seconds() }}
  - action: button.press
    target:
      entity_id: button.solax_remotecontrol_trigger
    data: {}
